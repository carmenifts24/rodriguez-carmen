# -*- coding: utf-8 -*-
"""004_Trafilatura.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CXYj7vB4a06YgrjnlnVgiwVVqpc-AlrJ
"""

# Instalamos e importamos trafilatura, una librería que permite extraer texto limpio de páginas web.

!pip install trafilatura -q
import trafilatura

url = "https://www.pagina12.com.ar/849012-taylor-swift-anuncia-el-lanzamiento-de-su-nuevo-disco-the-li"

downloaded = trafilatura.fetch_url(url)
text = trafilatura.extract(downloaded, include_comments=False, include_images=False)
print(text)
# Descargamos el contenido HTML de una URL y extraemos solo el texto principal (excluyendo comentarios e imágenes).

#Lista de URLs y corpus de artículos
import pandas as pd
import trafilatura
# Función general para obtener el texto de una URL.
# Usa trafilatura e incluye manejo de errores y validaciones.


def obtener_texto_articulo(url):
    """
    Obtiene y extrae texto de una URL dada usando trafilatura.

    Args:
        url (str): La URL del artículo.

    Returns:
        str: El texto extraído del artículo, o un mensaje de error si la obtención o extracción falla.
    """
    try:
        descargado = trafilatura.fetch_url(url)
        if descargado:
            texto = trafilatura.extract(descargado, include_comments=False, include_images=False)
            if texto:
                return texto
            else:
                return "No se pudo extraer texto de la URL."
        else:
            return "No se pudo obtener la URL."
    except Exception as e:
        return f"Ocurrió un error: {e}"

# Lista de URLs para construir el corpus (puedes modificar esta lista)
urls = [
    "https://www.pagina12.com.ar/849012-taylor-swift-anuncia-el-lanzamiento-de-su-nuevo-disco-the-li",
    "https://www.infobae.com/politica/2025/08/31/elecciones-corrientes-2025-en-vivo-las-ultimas-noticias-sobre-los-comicios-provinciales-del-31-de-agosto/",
    "https://www.infobae.com/entretenimiento/2025/08/31/el-hermano-de-la-princesa-diana-visito-su-tumba-a-28-anos-de-su-muerte-un-dia-imposible/",
    "https://www.infobae.com/salud/2025/08/31/el-tamano-del-cuello-la-nueva-senal-de-alerta-para-tu-salud/",
    "https://www.infobae.com/salud/2025/08/31/una-mujer-creyo-que-tenia-el-oido-tapado-y-le-detectaron-una-grave-enfermedad-su-compleja-recuperacion/",
    # Agrega más URLs aquí si es necesario
]

# Crear una lista para almacenar los datos
# Creamos un DataFrame con columnas "URL" y "Texto", útil para análisis posteriores.

corpus_data = []

# Iterar sobre las URLs y extraer el texto
for url in urls:
    print(f"Procesando: {url}")
    texto_extraido = obtener_texto_articulo(url)
    corpus_data.append({'URL': url, 'Texto': texto_extraido})

# Crear el DataFrame de pandas
df_corpus = pd.DataFrame(corpus_data)

# Mostrar las primeras filas del DataFrame
# Mostramos las primeras filas del corpus y luego imprimimos el texto completo de cada artículo.

display(df_corpus.head())# Mostramos las primeras filas del corpus y luego imprimimos el texto completo de cada artículo.

# Iterar sobre las filas del DataFrame e imprimir el texto completo
for index, row in df_corpus.iterrows():
    print(f"--- Texto del artículo de la URL: {row['URL']} ---")
    print(row['Texto'])
    print("-" * 30) # Separador entre artículos

# También podes acceder al texto de un artículo específico por su índice
# Por ejemplo, para el primer artículo (índice 0):
print(df_corpus.loc[0, 'Texto'])

print(df_corpus.loc[1, 'Texto'])

print(df_corpus.loc[2, 'Texto'])

print(df_corpus.loc[3, 'Texto'])